# <类型>:(影响范围) <主题> <JIRA?>

# <body>

# <footer>

# 类型字段包含:
#        build: （构建）影响构建系统和外部依赖的改动（例如：gulp、broccoli、npm 库）
#        sync：同步主线或分支的Bug。适合多次提交，了解发生了什么情况
#        revert：回滚到上一个版本。
#        merge：代码合并。
#        ci: （CI）对 CI 配置文件和脚本的改动（例如：Travis、Circle、BrowserStack、SauceLabs）
#        docs: （文档）只对文档的改动
#        feat: （功能）新的功能
#        fix: （修复）bug 修复
#        perf: （性能）提升性能的改动
#        refactor: （重构）既没有修复 bug 也没有添加新功能的改动
#        style: （风格）不影响代码功能的改动（空格、格式、缺少分号等等）
#        test: （测试）添加缺少的测试用例或修改已存在的测试用例
# 影响范围：
#     用于说明 commit 影响的范围，比如修改的登录页、账户中心页等
# 主题：
#    commit目的的简短描述，不超过50个字符
# JIRA:
#    如果有对应的jira 请附上jira号
# Body 部分是对本次 commit 的详细描述，可以分成多行
# Footer用来关闭 Issue或以BREAKING CHANGE开头，后面是对变动的描述、
#       以及变动理由和迁移方法%   
